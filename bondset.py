from random import uniform 


### don't forget the insertion of acyclic fragments in 3,4 and 7-mem cycles (done)
### don't forget the OG3C61  (done)
### don't forget the di and tri-halogens (F, Cl, Br) (done)
### don't forget the new types (even in insertion)  (done)
### don't forget replacing all =O with =S   (done)


#####################################################################
#### acyclic atom types extracted from mol2 files by getfrag.py
#### the folder acycfrags contains 96 acyclic molecular fragment
#### these fragments were built such that the first atom lacks
#### one connection (single ot double) 
d = {
'BR.1' : {'a': ['Br'], 'c': [1], 'b': []} ,
'CG1N1.1' : {'a': ['C', 'N'], 'c': [1], 'b': [[1, 2, 3]]} ,
'CG1T1.1' : {'a': ['C', 'C', 'H'], 'c': [1], 'b': [[1, 2, 3], [2, 3, 1]]} ,
'CG251O.2' : {'a': ['C', 'C', 'N', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1], [2, 6, 1], [3, 7, 1], [7, 4, 1], [4, 8, 1], [4, 9, 1], [3, 10, 1], [7, 11, 1], [7, 12, 1]]} ,
'CG25C1.2' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1], [2, 6, 1], [3, 7, 2], [7, 4, 1], [4, 8, 1], [4, 9, 1], [3, 10, 1], [7, 11, 1]]} ,
'CG2D1.1' : {'a': ['C', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1], [2, 5, 1]]} ,
'CG2D1.2' : {'a': ['C', 'H', 'C', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1]]} ,
'CG2D1O.1' : {'a': ['C', 'C', 'O', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [2, 5, 1], [2, 6, 1]]} ,
'CG2D1O.2' : {'a': ['C', 'O', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [2, 3, 1], [1, 4, 1]]} ,
'CG2D2.2' : {'a': ['C', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1]]} ,
'CG2DC1.1' : {'a': ['C', 'C', 'H', 'C', 'H', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1], [2, 5, 1], [4, 6, 2], [4, 7, 1], [6, 8, 1], [6, 9, 1]]} ,
'CG2DC1.2' : {'a': ['C', 'C', 'H', 'C', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2], [2, 5, 1], [4, 6, 1], [4, 7, 1]]} ,
'CG2N2.1' : {'a': ['C', 'N', 'N', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [3, 5, 1], [2, 6, 1], [2, 7, 1]]} ,
'CG2N2.2' : {'a': ['C', 'N', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1], [1, 5, 1]]} ,
'CG2N2h.1' : {'a': ['C', 'N', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1], [1, 5, 1]]} ,
'CG2O1.1' : {'a': ['C', 'O', 'N', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [3, 5, 1]]} ,
'CG2O2.1' : {'a': ['C', 'O', 'O', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1]]} ,
'CG2O3.1' : {'a': ['C', 'O', 'O'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 2]]} ,
'CG2O4.1' : {'a': ['C', 'O', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1]]} ,
'CG2O5.1' : {'a': ['C', 'O', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1]]} ,
'CG2R51.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1], [3, 5, 1], [3, 6, 1], [3, 7, 1], [5, 4, 1], [5, 8, 1], [5, 9, 1], [4, 10, 1], [4, 11, 1], [2, 12, 1]]} ,
'CG2R52.1' : {'a': ['C', 'N', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1], [3, 5, 1], [3, 6, 1], [3, 7, 1], [5, 4, 1], [5, 8, 1], [5, 9, 1], [4, 10, 1], [4, 11, 1]]} ,
'CG2R53.1' : {'a': ['C', 'N', 'N', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1], [3, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [4, 8, 1], [4, 9, 1], [3, 10, 1]]} ,
'CG2R61.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 5, 1], [2, 7, 1], [3, 4, 2], [3, 10, 1], [4, 6, 1], [4, 11, 1], [5, 6, 2], [5, 8, 1], [6, 9, 1]]} ,
'CG2R61.2' : {'a': ['C', 'C', 'C', 'C', 'C', 'N', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 2], [5, 6, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [2, 9, 1], [5, 10, 1], [6, 11, 1]]} ,
'CG2R62.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'N', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 5, 1], [2, 10, 1], [3, 4, 2], [3, 8, 1], [4, 6, 1], [4, 9, 1], [5, 6, 2], [5, 7, 1], [6, 11, 1]]} ,
'CG2R62.2' : {'a': ['C', 'C', 'C', 'N', 'C', 'N', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 2], [5, 6, 1], [4, 6, 1], [3, 7, 1], [5, 8, 1], [6, 9, 1], [2, 10, 1], [4, 11, 1]]} ,
'CG2R64.1' : {'a': ['C', 'N', 'N', 'C', 'C', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 5, 1], [3, 4, 2], [4, 6, 1], [4, 9, 1], [5, 6, 2], [5, 7, 1], [6, 8, 1]]} ,
'CG2R64.2' : {'a': ['C', 'N', 'N', 'C', 'C', 'N', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 2], [5, 6, 1], [4, 6, 1], [4, 7, 1], [5, 8, 1], [6, 9, 1]]} ,
'CG2R71.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'C', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1], [3, 5, 2], [4, 6, 2], [5, 7, 1], [7, 6, 1], [2, 8, 1], [4, 9, 1], [6, 10, 1], [3, 11, 1], [5, 12, 1], [7, 13, 2], [13, 14, 1], [13, 15, 1]]} ,
'CG2R71.2' : {'a': ['C', 'C', 'C', 'C', 'C', 'N', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2], [3, 5, 2], [4, 6, 1], [5, 7, 1], [7, 6, 1], [3, 8, 1], [5, 9, 1], [7, 10, 2], [10, 11, 1], [10, 12, 1], [2, 13, 1], [4, 14, 1], [6, 15, 1]]} ,
'CG301.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1], [2, 7, 1], [4, 8, 1], [4, 9, 1], [4, 10, 1], [3, 11, 1], [3, 12, 1], [3, 13, 1]]} ,
'CG302.1' : {'a': ['C', 'F', 'F', 'F'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'CG311.1' : {'a': ['C', 'C', 'H', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [4, 5, 1], [4, 6, 1], [4, 7, 1], [2, 8, 1], [2, 9, 1], [2, 10, 1]]} ,
'CG312.1' : {'a': ['C', 'F', 'H', 'F'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'CG314.1' : {'a': ['C', 'N', 'H', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [4, 5, 1], [4, 6, 1], [4, 7, 1], [2, 8, 1], [2, 9, 1], [2, 10, 1]]} ,
'CG321.1' : {'a': ['C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1], [2, 7, 1]]} ,
'CG322.1' : {'a': ['C', 'F', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'CG323.1' : {'a': ['C', 'S', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'CG324.1' : {'a': ['C', 'N', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1], [2, 7, 1]]} ,
'CG331.1' : {'a': ['C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'CG3C31.1' : {'a': ['C', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 3, 1], [2, 5, 1], [2, 6, 1], [3, 7, 1], [3, 8, 1]]} ,
'CG3C41.1' : {'a': ['C', 'C', 'C', 'H', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1], [3, 5, 1], [5, 7, 1], [5, 8, 1], [3, 9, 1], [3, 10, 1], [2, 11, 1]]} ,
'CG3C50.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [3, 5, 1], [3, 6, 1], [3, 7, 1], [2, 8, 1], [5, 8, 1], [5, 9, 1], [8, 10, 1], [8, 11, 1], [2, 12, 1], [2, 13, 1], [5, 14, 1], [4, 15, 1], [4, 16, 1], [4, 17, 1]]} ,
'CG3C51.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1], [2, 7, 1], [4, 7, 1], [4, 8, 1], [7, 9, 1], [7, 10, 1], [2, 11, 1], [2, 12, 1], [4, 13, 1], [1, 14, 1]]} ,
'CG3C53.1' : {'a': ['C', 'N', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1], [2, 7, 2], [4, 7, 1], [4, 8, 1], [4, 9, 1], [1, 10, 1], [7, 11, 1], [2, 12, 1]]} ,
'CG3RC1.1' : {'a': ['C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [2, 3, 1], [2, 4, 1], [2, 5, 1], [1, 6, 1], [3, 6, 1], [3, 7, 1], [6, 8, 1], [6, 9, 1]]} ,
'CL.1' : {'a': ['Cl'], 'c': [1], 'b': []} ,
'F.1' : {'a': ['F'], 'c': [1], 'b': []} ,
'H.1' : {'a': ['H'], 'c': [1], 'b': []} ,
'I.1' : {'a': ['I'], 'c': [1], 'b': []} ,
'NG2D1.1' : {'a': ['N', 'C', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1]]} ,
'NG2D1.2' : {'a': ['N', 'H'], 'c': [2], 'b': [[1, 2, 1]]} ,
'NG2O1.1' : {'a': ['N', 'O', 'O'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1]]} ,
'NG2P1.1' : {'a': ['N', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1], [1, 5, 1]]} ,
'NG2P1.2' : {'a': ['N', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1]]} ,
'NG2R43.1' : {'a': ['N', 'C', 'O', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [1, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [4, 8, 1], [4, 9, 1]]} ,
'NG2R51.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [2, 5, 2], [2, 6, 1], [3, 4, 2], [3, 8, 1], [4, 5, 1], [4, 9, 1], [5, 7, 1]]} ,
'NG2R52.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 2], [2, 5, 1], [4, 5, 1], [3, 6, 1], [4, 7, 1], [5, 8, 1], [5, 9, 1], [2, 10, 1]]} ,
'NG2R52.2' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 5, 2], [2, 6, 1], [3, 4, 2], [3, 8, 1], [4, 5, 1], [4, 9, 1], [5, 7, 1]]} ,
'NG2R52c.2' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 5, 1], [3, 4, 1], [4, 5, 1], [2, 6, 1], [2, 7, 1], [5, 8, 1], [5, 9, 1], [3, 10, 1], [3, 11, 1], [4, 12, 1], [4, 13, 1]]} ,
'NG2R53.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'O'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 1], [4, 5, 1], [3, 6, 1], [4, 7, 1], [5, 8, 1], [5, 9, 1], [2, 10, 2]]} ,
'NG2R61.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'C', 'H', 'H', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 6, 1], [2, 3, 2], [3, 4, 1], [3, 9, 1], [4, 5, 1], [4, 10, 2], [5, 6, 2], [5, 7, 1], [6, 8, 1], [10, 11, 1], [10, 12, 1], [2, 13, 1], [13, 14, 1], [13, 15, 1], [13, 16, 1]]} ,
'NG2R61.2' : {'a': ['N', 'C', 'C', 'N', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 6, 1], [2, 3, 2], [2, 9, 1], [3, 4, 1], [3, 10, 1], [4, 5, 1], [4, 11, 1], [5, 6, 2], [5, 7, 1], [6, 8, 1]]} ,
'NG2S0.1' : {'a': ['N', 'C', 'C', 'O', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2], [2, 5, 1], [3, 6, 1], [3, 7, 1], [3, 8, 1]]} ,
'NG2S1.1' : {'a': ['N', 'C', 'H', 'O', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2], [2, 5, 1]]} ,
'NG2S3.1' : {'a': ['N', 'P', 'O', 'O', 'O', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [2, 5, 1], [5, 6, 1], [4, 7, 1], [1, 8, 1]]} ,
'NG301.1' : {'a': ['N', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1], [2, 6, 1], [3, 7, 1], [3, 8, 1], [3, 9, 1]]} ,
'NG311.1' : {'a': ['N', 'C', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1], [2, 6, 1]]} ,
'NG321.1' : {'a': ['N', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1]]} ,
'NG3C51.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1], [5, 1, 1], [2, 6, 1], [2, 7, 1], [3, 8, 1], [3, 9, 1], [4, 10, 1], [4, 11, 1], [5, 12, 1], [5, 13, 1]]} ,
'NG3N1.1' : {'a': ['N', 'N', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1]]} ,
'NG3P0.1' : {'a': ['N', 'C', 'H', 'H', 'H', 'C', 'H', 'H', 'H', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1], [2, 5, 1], [1, 6, 1], [6, 7, 1], [6, 8, 1], [6, 9, 1], [1, 10, 1], [10, 11, 1], [10, 12, 1], [10, 13, 1]]} ,
'NG3P1.1' : {'a': ['N', 'C', 'H', 'H', 'H', 'C', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1], [2, 5, 1], [1, 6, 1], [6, 7, 1], [6, 8, 1], [6, 9, 1], [1, 10, 1]]} ,
'NG3P2.1' : {'a': ['N', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1], [2, 5, 1], [1, 6, 1], [1, 7, 1]]} ,
'NG3P3.1' : {'a': ['N', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'O.2' : {'a': ['O'], 'c': [2], 'b': []} ,
'OG2S1.1' : {'a': ['O', 'P', 'O', 'O', 'H', 'S', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1], [2, 6, 1], [6, 7, 1]]} ,
'OG2S2.1' : {'a': ['O', 'P', 'O', 'S', 'S', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [2, 5, 1], [5, 6, 1], [4, 7, 1]]} ,
'OG301.1' : {'a': ['O', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1], [2, 5, 1]]} ,
'OG302.1' : {'a': ['O', 'C', 'O', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1]]} ,
'OG303.1' : {'a': ['O', 'P', 'O', 'O', 'H', 'O', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1], [2, 6, 1], [6, 7, 1]]} ,
'OG311.1' : {'a': ['O', 'H'], 'c': [1], 'b': [[1, 2, 1]]} ,
'OG312.1' : {'a': ['O'], 'c': [1], 'b': []} ,
'Om.1' : {'a': ['O'], 'c': [1], 'b': []} ,
'PG0.1' : {'a': ['P', 'O', 'O', 'H', 'O', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [1, 5, 1], [5, 6, 1]]} ,
'PG0.2' : {'a': ['P', 'O', 'O', 'H', 'O', 'H'], 'c': [2], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [1, 5, 1], [5, 6, 1]]} ,
'PG1.1' : {'a': ['P', 'O', 'O', 'O', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [1, 4, 1], [4, 5, 1]]} ,
'PG1.2' : {'a': ['P', 'O', 'O', 'O', 'H'], 'c': [2], 'b': [[1, 2, 2], [1, 3, 1], [1, 4, 1], [4, 5, 1]]} ,
'PG2.1' : {'a': ['P', 'O', 'O', 'O'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [1, 4, 1]]} ,
'PG2.2' : {'a': ['P', 'O', 'O', 'O'], 'c': [2], 'b': [[1, 2, 2], [1, 3, 1], [1, 4, 1]]} ,
'S.2' : {'a': ['S'], 'c': [2], 'b': []} ,
'SG2P1.1' : {'a': ['S', 'P', 'O', 'O', 'H', 'O', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1], [2, 6, 1], [6, 7, 1]]} ,
'SG2P2.1' : {'a': ['S', 'P', 'O', 'O', 'H', 'S', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1], [2, 6, 1], [6, 7, 1]]} ,
'SG301.1' : {'a': ['S', 'S', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1]]} ,
'SG302.1' : {'a': ['S'], 'c': [1], 'b': []} ,
'SG311.1' : {'a': ['S', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1], [2, 5, 1]]} ,
'SG311h.1' : {'a': ['S', 'H'], 'c': [1], 'b': [[1, 2, 1]]} ,
'SG3O1.1' : {'a': ['S', 'O', 'O', 'O'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 2], [1, 4, 1]]} ,
'SG3O1.2' : {'a': ['S', 'O', 'O', 'O'], 'c': [2], 'b': [[1, 2, 2], [1, 3, 2], [1, 4, 1]]} ,
'SG3O2.1' : {'a': ['S', 'O', 'O', 'O', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 2], [1, 4, 1], [4, 5, 1]]} ,
'SG3O2.2' : {'a': ['S', 'O', 'O', 'O', 'H'], 'c': [2], 'b': [[1, 2, 2], [1, 3, 2], [1, 4, 1], [4, 5, 1]]} ,
'SG3O3.1' : {'a': ['S', 'O', 'C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1]]} ,
'Sm.1' : {'a': ['S'], 'c': [1], 'b': []} 
}


    
#####################################################################
## halogination (di and tri)
#### halogination (di and tri) extracted from mol2 files by getfrag.py
#### the folders alogens and filling contain       molecular fragments
#### these fragments were built such that the first atom lacks two or more
#### connections (single) 
h = {
'hCG2D1.2' : {'a': ['C', 'C', 'H', 'H'], 'c': [2], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1]]} ,
'hCG2DC1.2' : {'a': ['C', 'C', 'C', 'H', 'C', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1], [3, 5, 2], [3, 6, 1], [5, 7, 1], [5, 8, 1]]} ,
'hCG2N2h.2' : {'a': ['C', 'N', 'H', 'H'], 'c': [2], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1]]} ,
'hCG2O4.2' : {'a': ['C', 'O'], 'c': [2], 'b': [[1, 2, 2]]} ,
'hCG2O4S.2' : {'a': ['C', 'S'], 'c': [2], 'b': [[1, 2, 2]]} ,
'hCG301.4' : {'a': ['C'], 'c': [4], 'b': []} ,
'hCG3C31.2' : {'a': ['C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 3, 1], [2, 4, 1], [2, 5, 1], [3, 6, 1], [3, 7, 1]]} ,
'hCG3C41.2' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1], [3, 4, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [3, 9, 1], [2, 10, 1]]} ,
'hCG3C50.2' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1], [2, 7, 1], [4, 7, 1], [4, 8, 1], [7, 9, 1], [7, 10, 1], [2, 11, 1], [2, 12, 1], [4, 13, 1]]} ,
'hNG2P1.2' : {'a': ['N', 'C', 'H', 'H'], 'c': [2], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1]]} ,
'hNG2S0.2' : {'a': ['N', 'C', 'O', 'H'], 'c': [2], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1]]} ,
'hNG301.3' : {'a': ['N'], 'c': [3], 'b': []} ,
'hNG3N1.2' : {'a': ['N', 'N', 'H', 'H'], 'c': [2], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1]]} ,
'hNG3P0.4' : {'a': ['N'], 'c': [4], 'b': []} ,
'hO.2' : {'a': ['O'], 'c': [2], 'b': []} ,
'hPG0.3' : {'a': ['P', 'O'], 'c': [3], 'b': [[1, 2, 2]]} ,
'hPG1.3' : {'a': ['P', 'O'], 'c': [3], 'b': [[1, 2, 1]]} ,
'hSG302.2' : {'a': ['S'], 'c': [2], 'b': []} ,
'hSG3O1.3' : {'a': ['S', 'O'], 'c': [3], 'b': [[1, 2, 2]]} ,
'hSG3O3.2' : {'a': ['S', 'O'], 'c': [2], 'b': [[1, 2, 2]]} 
}

## filling atoms for halogen fragments
f = {
'Br.1' : {'a': ['Br'], 'c': [1], 'b': []} ,
'CH3.1' : {'a': ['C', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'Cl.1' : {'a': ['Cl'], 'c': [1], 'b': []} ,
'F.1' : {'a': ['F'], 'c': [1], 'b': []} ,
'H.1' : {'a': ['H'], 'c': [1], 'b': []} ,
'I.1' : {'a': ['I'], 'c': [1], 'b': []} ,
'N+.1' : {'a': ['N', 'H', 'H', 'H'], 'c': [1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1]]} ,
'O.1' : {'a': ['O', 'H'], 'c': [1], 'b': [[1, 2, 1]]} ,
'Om.1' : {'a': ['O'], 'c': [1], 'b': []} ,
'S.1' : {'a': ['S', 'H'], 'c': [1], 'b': [[1, 2, 1]]} ,
'Sm.1' : {'a': ['S'], 'c': [1], 'b': []}
}



#####################################################################
#### cyclic atom types extracted from mol2 files by getfrag.py
#### the folder cycfrags contains 47 cyclic molecular fragment
#### these fragments were built such that the first atom lacks
#### two connections (single ot double) 
p = {
'C==C.1.1' : {'a': ['C', 'C'], 'c': [1, 1], 'b': [[1, 2, 3]]} ,
'C=CC.1.2' : {'a': ['C', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [3, 5, 1], [3, 6, 1]]} ,
'C=CC=C.1.1' : {'a': ['C', 'C', 'C', 'H', 'H', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [3, 4, 1], [3, 5, 1], [2, 6, 2], [6, 7, 1], [6, 8, 1]]} ,
'C=CO.1.1' : {'a': ['C', 'O', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [3, 4, 1], [3, 5, 1]]} ,
'C=ON.1.1' : {'a': ['C', 'N', 'H', 'O'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [1, 4, 2]]} ,
'CCCC.1.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1], [4, 7, 1], [4, 8, 1], [4, 9, 1], [3, 10, 1], [3, 11, 1], [3, 12, 1]]} ,
'CCHC.1.1' : {'a': ['C', 'C', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [4, 5, 1], [4, 6, 1], [4, 7, 1], [2, 8, 1], [2, 9, 1]]} ,
'CCHN+.1.1' : {'a': ['C', 'N', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1], [4, 7, 1], [4, 8, 1], [4, 9, 1]]} ,
'CF=C.1.1' : {'a': ['C', 'C', 'F', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1]]} ,
'CG251O.2.1' : {'a': ['C', 'C', 'N', 'C', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1], [3, 6, 1], [6, 4, 1], [4, 7, 1], [4, 8, 1], [3, 9, 1], [6, 10, 1], [6, 11, 1]]} ,
'CG251O.2.2' : {'a': ['C', 'C', 'N', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [3, 5, 1], [5, 4, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [5, 9, 1], [5, 10, 1]]} ,
'CG25C1.2.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'C', 'H', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [2, 5, 1], [3, 6, 2], [6, 4, 1], [4, 7, 1], [4, 8, 1], [3, 9, 1], [6, 10, 1]]} ,
'CG25C1.2.2' : {'a': ['C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [3, 5, 2], [5, 4, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [5, 9, 1]]} ,
'CG2R51.1.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 2], [3, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [3, 8, 1], [4, 9, 1]]} ,
'CG2R51.1.2' : {'a': ['C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [3, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [3, 8, 1], [4, 9, 1], [4, 10, 1]]} ,
'CG2R52.1.1' : {'a': ['C', 'C', 'N', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 2], [3, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [4, 8, 1]]} ,
'CG2R52.1.2' : {'a': ['C', 'C', 'N', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [3, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [4, 8, 1], [4, 9, 1]]} ,
'CG2R53.1.1' : {'a': ['C', 'N', 'N', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [3, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [4, 8, 1], [4, 9, 1]]} ,
'CG2R53.1.2' : {'a': ['C', 'N', 'N', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [3, 5, 1], [5, 4, 1], [5, 6, 1], [5, 7, 1], [4, 8, 1], [4, 9, 1]]} ,
'CG2R61.1.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 5, 2], [3, 4, 1], [3, 7, 1], [4, 6, 2], [4, 8, 1], [5, 6, 1], [5, 10, 1], [6, 9, 1]]} ,
'CG2R61.1.2' : {'a': ['C', 'C', 'C', 'C', 'N', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 5, 1], [3, 4, 1], [4, 6, 2], [5, 6, 1], [3, 7, 1], [4, 8, 1], [6, 9, 1], [5, 10, 1]]} ,
'CG2R61.2.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'N', 'H', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 2], [5, 6, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [5, 9, 1], [6, 10, 1]]} ,
'CG2R61.2.2' : {'a': ['C', 'C', 'C', 'C', 'N', 'N', 'H', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 1], [5, 6, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [6, 9, 1], [5, 10, 1]]} ,
'CG2R62.1.1' : {'a': ['C', 'C', 'N', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 5, 2], [3, 4, 1], [3, 7, 1], [4, 6, 2], [4, 8, 1], [5, 6, 1], [5, 10, 1], [6, 9, 1]]} ,
'CG2R62.1.2' : {'a': ['C', 'C', 'N', 'C', 'N', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 5, 1], [3, 4, 1], [4, 6, 2], [5, 6, 1], [3, 7, 1], [4, 8, 1], [6, 9, 1], [5, 10, 1]]} ,
'CG2R62.2.1' : {'a': ['C', 'N', 'C', 'C', 'C', 'N', 'H', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 2], [5, 6, 1], [4, 6, 1], [3, 7, 1], [4, 8, 1], [5, 9, 1], [6, 10, 1]]} ,
'CG2R62.2.2' : {'a': ['C', 'N', 'N', 'C', 'N', 'N', 'H', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 1], [5, 6, 1], [4, 6, 1], [6, 7, 1], [4, 8, 1], [5, 9, 1], [3, 10, 1]]} ,
'CG2R64.1.1' : {'a': ['C', 'N', 'N', 'C', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 5, 2], [3, 4, 1], [4, 6, 2], [4, 7, 1], [5, 6, 1], [5, 9, 1], [6, 8, 1]]} ,
'CG2R64.1.2' : {'a': ['C', 'N', 'N', 'N', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 5, 1], [3, 4, 1], [4, 6, 1], [4, 9, 1], [5, 6, 2], [5, 8, 1], [6, 7, 1]]} ,
'CG2R64.2.1' : {'a': ['C', 'N', 'N', 'C', 'C', 'N', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 2], [5, 6, 1], [4, 6, 1], [4, 7, 1], [5, 8, 1], [6, 9, 1]]} ,
'CG2R64.2.2' : {'a': ['C', 'N', 'N', 'C', 'N', 'N', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 2], [2, 5, 1], [5, 6, 1], [4, 6, 1], [4, 7, 1], [6, 8, 1], [5, 9, 1]]} ,
'CG2R71.1.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'C', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 2], [3, 5, 1], [4, 6, 1], [5, 7, 2], [7, 6, 1], [3, 8, 1], [5, 9, 1], [7, 10, 1], [6, 11, 2], [11, 12, 1], [11, 13, 1], [4, 14, 1]]} ,
'CG2R71.1.2' : {'a': ['C', 'C', 'C', 'N', 'C', 'C', 'C', 'H', 'H', 'H', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [3, 5, 1], [4, 6, 1], [5, 7, 2], [7, 6, 1], [3, 8, 1], [5, 9, 1], [7, 10, 1], [6, 11, 2], [11, 12, 1], [11, 13, 1], [4, 14, 1]]} ,
'CG2R71.2.1' : {'a': ['C', 'C', 'C', 'C', 'C', 'N', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2], [3, 5, 2], [4, 6, 1], [5, 7, 1], [7, 6, 1], [3, 8, 1], [5, 9, 1], [7, 10, 2], [10, 11, 1], [10, 12, 1], [4, 13, 1], [6, 14, 1]]} ,
'CG2R71.2.2' : {'a': ['C', 'C', 'C', 'N', 'C', 'N', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [3, 5, 2], [4, 6, 1], [5, 7, 1], [7, 6, 1], [3, 8, 1], [5, 9, 1], [7, 10, 2], [10, 11, 1], [10, 12, 1], [6, 13, 1], [4, 14, 1]]} ,
'CG3C31.1.1' : {'a': ['C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 3, 1], [2, 5, 1], [3, 6, 1], [3, 7, 1]]} ,
'CG3C31.2.2' : {'a': ['C', 'C', 'C', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 3, 1], [3, 4, 1], [3, 5, 1]]} ,
'CG3C41.1.1' : {'a': ['C', 'C', 'C', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1], [3, 5, 1], [5, 7, 1], [5, 8, 1], [3, 9, 1], [3, 10, 1]]} ,
'CG3C41a.1.1' : {'a': ['N', 'N', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1], [3, 4, 1], [4, 5, 1], [4, 6, 1], [3, 7, 1], [3, 8, 1]]} ,
'CG3C51.1.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1], [2, 7, 1], [4, 7, 1], [4, 8, 1], [7, 9, 1], [7, 10, 1], [2, 11, 1], [4, 12, 1], [1, 13, 1]]} ,
'CG3C51.1.2' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [3, 5, 1], [3, 6, 1], [2, 7, 1], [4, 7, 1], [4, 8, 1], [7, 9, 1], [7, 10, 1], [4, 11, 1], [1, 12, 1]]} ,
'CG3RC1.1.1' : {'a': ['C', 'C', 'C', 'H', 'C', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 3, 1], [2, 4, 1], [1, 5, 1], [3, 5, 1], [3, 6, 1], [5, 7, 1], [5, 8, 1]]} ,
'CG3RC1.1.2' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 3, 1], [1, 4, 1], [3, 4, 1], [3, 5, 1], [4, 6, 1], [4, 7, 1]]} ,
'CH=C.1.1' : {'a': ['C', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1]]} ,
'CH=N+.1.1' : {'a': ['C', 'N', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1]]} ,
'CH=N.1.1' : {'a': ['C', 'N', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1]]} ,
'CHHC.1.1' : {'a': ['C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1]]} ,
'CHHN+.1.1' : {'a': ['C', 'N', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1]]} ,
'CN=N.1.1' : {'a': ['C', 'N', 'N', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1], [3, 5, 1]]} ,
'N+.1.1' : {'a': ['N', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 5, 1], [2, 6, 1]]} ,
'N=CH.1.1' : {'a': ['N', 'C', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [2, 3, 1]]} ,
'N=N.1.1' : {'a': ['N', 'N'], 'c': [1, 1], 'b': [[1, 2, 2]]} ,
'NG2R43.1.1' : {'a': ['N', 'C', 'C', 'C', 'H', 'H', 'O', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [1, 4, 1], [4, 3, 1], [3, 5, 1], [3, 6, 1], [4, 7, 2], [2, 8, 1]]} ,
'NG2R51.1.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 5, 2], [3, 4, 2], [3, 7, 1], [4, 5, 1], [4, 8, 1], [5, 6, 1]]} ,
'NG2R51.1.2' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 5, 1], [3, 4, 2], [3, 6, 1], [4, 5, 1], [4, 7, 1], [5, 8, 1], [5, 9, 1]]} ,
'NG2R52.1.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [3, 4, 1], [2, 5, 2], [4, 5, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [5, 9, 1]]} ,
'NG2R52.1.2' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [3, 4, 1], [2, 5, 1], [4, 5, 1], [4, 6, 1], [4, 7, 1], [3, 8, 1], [5, 9, 1], [5, 10, 1]]} ,
'NG2R52.2.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 5, 2], [3, 4, 2], [3, 7, 1], [4, 5, 1], [4, 8, 1], [5, 6, 1]]} ,
'NG2R52.2.2' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 5, 1], [3, 4, 2], [3, 6, 1], [4, 5, 1], [4, 7, 1], [5, 8, 1], [5, 9, 1]]} ,
'NG2R53.1.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'O', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [2, 5, 2], [4, 5, 1], [3, 6, 2], [4, 7, 1], [4, 8, 1], [5, 9, 1]]} ,
'NG2R53.1.2' : {'a': ['N', 'C', 'C', 'C', 'C', 'O', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 1], [3, 4, 1], [2, 5, 1], [4, 5, 1], [3, 6, 2], [4, 7, 1], [4, 8, 1], [5, 9, 1], [5, 10, 1]]} ,
'NG2R61.1.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 6, 1], [2, 3, 2], [3, 4, 1], [3, 9, 1], [4, 5, 1], [4, 10, 2], [5, 6, 2], [5, 7, 1], [6, 8, 1], [10, 11, 1], [10, 12, 1]]} ,
'NG2R61.1.2' : {'a': ['N', 'C', 'N', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 6, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1], [4, 9, 2], [5, 6, 2], [5, 7, 1], [6, 8, 1], [9, 10, 1], [9, 11, 1], [3, 12, 1]]} ,
'NG2R61.2.1' : {'a': ['N', 'C', 'C', 'N', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 6, 1], [2, 3, 2], [3, 4, 1], [3, 9, 1], [4, 5, 1], [4, 10, 1], [5, 6, 2], [5, 7, 1], [6, 8, 1]]} ,
'NG2R61.2.2' : {'a': ['N', 'C', 'C', 'C', 'N', 'N', 'H', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 6, 1], [2, 3, 1], [3, 4, 2], [3, 9, 1], [4, 5, 1], [4, 10, 1], [5, 6, 1], [5, 7, 1], [6, 8, 1]]} ,
'NG2S0.1.1' : {'a': ['N', 'C', 'C', 'O', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2], [3, 5, 1], [3, 6, 1], [3, 7, 1]]} ,
'NG2S1.1.1' : {'a': ['N', 'C', 'H', 'O'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2]]} ,
'NG2S3.1.1' : {'a': ['N', 'P', 'O', 'O', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1], [1, 6, 1]]} ,
'NG3C51.1.1' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1], [5, 1, 1], [2, 6, 1], [3, 7, 1], [3, 8, 1], [4, 9, 1], [4, 10, 1], [5, 11, 1], [5, 12, 1]]} ,
'NG3C51.1.2' : {'a': ['N', 'C', 'C', 'C', 'C', 'H', 'H', 'H', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1], [5, 1, 1], [3, 6, 1], [3, 7, 1], [4, 8, 1], [4, 9, 1], [5, 10, 1], [5, 11, 1]]} ,
'NPG0.1.1' : {'a': ['N', 'P', 'H', 'O', 'O', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [4, 2, 2], [2, 5, 1], [5, 6, 1]]} ,
'OC.1.1' : {'a': ['O', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1]]} ,
'OC.1.2' : {'a': ['O', 'C', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [2, 3, 1]]} ,
'OC=C.1.1' : {'a': ['O', 'C', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 2], [3, 4, 1], [3, 5, 1]]} ,
'OG303.1.1' : {'a': ['O', 'P', 'O', 'O', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1]]} ,
'OG3C31.1.1' : {'a': ['C', 'C', 'O', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1], [1, 4, 1], [2, 3, 1], [2, 5, 1]]} ,
'OG3C31.2.2' : {'a': ['C', 'C', 'O'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 3, 1]]} ,
'PG0.1.1' : {'a': ['P', 'N', 'H', 'O', 'O', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [1, 4, 2], [1, 5, 1], [5, 6, 1]]} ,
'PG1.1.1' : {'a': ['P', 'N', 'H', 'O', 'O'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [1, 4, 2], [1, 5, 2]]} ,
'PG2.1.1' : {'a': ['P', 'N', 'O', 'O'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 2], [1, 4, 2]]} ,
'SC.1.1' : {'a': ['S', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [2, 4, 1]]} ,
'SC.1.2' : {'a': ['S', 'C', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [2, 3, 1]]} ,
'SC=C.1.1' : {'a': ['S', 'C', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 2], [3, 4, 1], [3, 5, 1]]} ,
'SG2D1.1.1' : {'a': ['C', 'N', 'H', 'S'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [1, 4, 2]]} ,
'SG2D1c4.1.1' : {'a': ['N', 'C', 'C', 'C', 'H', 'H', 'S', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1], [1, 4, 1], [4, 3, 1], [3, 5, 1], [3, 6, 1], [4, 7, 2], [2, 8, 1]]} ,
'SG2P1.1.1' : {'a': ['S', 'P', 'O', 'O', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1]]} ,
'SG2P2.1.1' : {'a': ['S', 'P', 'O', 'S', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 2], [2, 4, 1], [4, 5, 1]]} ,
'SG3O1.1.1' : {'a': ['S', 'N', 'O', 'O'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 2], [1, 4, 2]]} ,
'SG3O2.1.1' : {'a': ['S', 'C', 'O', 'O', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [1, 4, 2], [2, 5, 1], [2, 6, 1]]} ,
'SG3O3.1.1' : {'a': ['S', 'C', 'O', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [2, 5, 1]]}
}



#####################################################################
#### linking atom types extracted from mol2 files by getfrag.py
#### the folder linkers contains 5 cyclic linker fragment
#### these fragments were built such that the first atom lacks
#### two connections (single or double) 

q = {
'C.1.1' : {'a': ['C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 1]]} ,
'C.1.2' : {'a': ['C', 'H'], 'c': [1, 2], 'b': [[1, 2, 1]]} ,
'C.2.1' : {'a': ['C', 'H'], 'c': [2, 1], 'b': [[1, 2, 1]]} ,
'C7.1.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 3, 1], [2, 3, 1], [1, 4, 2], [4, 5, 1], [4, 6, 1], [3, 7, 2], [7, 8, 1], [7, 9, 1], [2, 10, 2], [10, 11, 1], [10, 12, 1]]} ,
'C7.1.2' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 3, 1], [2, 3, 1], [1, 4, 2], [4, 5, 1], [4, 6, 1], [3, 7, 2], [7, 8, 1], [7, 9, 1], [2, 10, 1]]} ,
'C7.2.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'H', 'C', 'H', 'H'], 'c': [2, 1], 'b': [[1, 3, 1], [2, 3, 1], [3, 4, 2], [4, 5, 1], [4, 6, 1], [1, 7, 1], [2, 8, 2], [8, 9, 1], [8, 10, 1]]} ,
'C7.2.2' : {'a': ['C', 'C', 'C', 'H', 'H', 'C', 'H', 'H'], 'c': [2, 2], 'b': [[1, 3, 1], [2, 3, 1], [2, 4, 1], [1, 5, 1], [3, 6, 2], [6, 7, 1], [6, 8, 1]]} ,
'C72.1.1' : {'a': ['C', 'C', 'C', 'C', 'H', 'H', 'H', 'H'], 'c': [1, 1], 'b': [[1, 3, 2], [2, 3, 1], [2, 4, 2], [4, 5, 1], [4, 6, 1], [1, 7, 1], [3, 8, 1]]} ,
'C72.1.2' : {'a': ['C', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 3, 2], [2, 3, 1], [2, 4, 1], [1, 5, 1], [3, 6, 1]]} ,
'C72.2.1' : {'a': ['C', 'C', 'C', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 3, 1], [2, 3, 2], [1, 4, 1], [2, 5, 1], [3, 6, 1]]} ,
'C72.2.2' : {'a': ['C', 'C', 'N', 'H', 'H', 'H'], 'c': [2, 2], 'b': [[1, 3, 1], [2, 3, 1], [1, 4, 1], [2, 5, 1], [3, 6, 1]]} ,
'C74.1.1' : {'a': ['C', 'O', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 3, 2], [2, 3, 1], [1, 4, 1], [3, 5, 1]]} ,
'C74.1.2' : {'a': ['N', 'C', 'N', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 3, 1], [2, 3, 1], [2, 4, 1], [1, 5, 1], [3, 6, 1]]} ,
'C74.2.1' : {'a': ['C', 'N', 'N', 'H', 'H', 'H'], 'c': [2, 1], 'b': [[1, 3, 1], [2, 3, 1], [3, 4, 1], [2, 5, 1], [1, 6, 1]]} ,
'C76.1.1' : {'a': ['N', 'O', 'N', 'H', 'H'], 'c': [1, 1], 'b': [[1, 3, 1], [2, 3, 1], [3, 4, 1], [1, 5, 1]]} ,
'C=C.1.1' : {'a': ['C', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [2, 3, 1], [2, 4, 1]]} ,
'C=CC.1.2' : {'a': ['C', 'C', 'C', 'H', 'H', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [1, 3, 2], [2, 4, 1], [3, 5, 1], [3, 6, 1]]} ,
'C=CC=C.1.1' : {'a': ['C', 'C', 'C', 'H', 'H', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [1, 3, 2], [3, 4, 1], [3, 5, 1], [2, 6, 2], [6, 7, 1], [6, 8, 1]]} ,
'CC.2.2' : {'a': ['C', 'C', 'H', 'H'], 'c': [2, 2], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 1]]} ,
'CC=C.2.1' : {'a': ['C', 'C', 'H', 'C', 'H', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1], [2, 4, 2], [4, 5, 1], [4, 6, 1]]} ,
'CH=C.1.1' : {'a': ['C', 'C', 'H', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1], [2, 4, 1]]} ,
'CO.2.1' : {'a': ['C', 'O', 'H'], 'c': [2, 1], 'b': [[1, 2, 1], [1, 3, 1]]} ,
'N.1.1' : {'a': ['N', 'H'], 'c': [1, 1], 'b': [[1, 2, 1]]} ,
'O.1.1' : {'a': ['O'], 'c': [1, 1], 'b': []} ,
'OC.1.2' : {'a': ['O', 'C', 'H'], 'c': [1, 2], 'b': [[1, 2, 1], [2, 3, 1]]} ,
'ON.1.1' : {'a': ['O', 'N', 'H'], 'c': [1, 1], 'b': [[1, 2, 1], [2, 3, 1]]} ,
'P0.1.1' : {'a': ['P', 'O', 'O', 'H'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1], [3, 4, 1]]} ,
'P1.1.1' : {'a': ['P', 'O', 'O'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 1]]} ,
'S1.2.1' : {'a': ['S', 'O', 'O'], 'c': [2, 1], 'b': [[1, 2, 2], [1, 3, 2]]} ,
'S2.1.1' : {'a': ['S', 'O', 'O'], 'c': [1, 1], 'b': [[1, 2, 2], [1, 3, 2]]} ,
'S3.1.1' : {'a': ['S', 'O'], 'c': [1, 1], 'b': [[1, 2, 2]]} 
}

        
#######################################################################################
#### functions

def join(g1,g2): 
    f1 = {'a':[a for a in g1['a']], 'b':[b for b in g1['b']]}
    f2 = {'a':[a for a in g2['a']], 'b':[b for b in g2['b']]}
    n = len(f1['a'])
    f1['a'] += f2['a']
    for b in f2['b'] :
        f1['b'] += [[b[0]+n, b[1]+n, b[2]]]    
    f1['b'] += [[1,n+1,g2['c'][0]]]
    f1['c'] = [g1['c'][-1],g2['c'][-1]]     
    return f1


def joins(L): 
    g = join(L[0],L[1])
    g = join(g,L[2])
    n = len(L)
    if n > 3 : 
        g = join(g,L[3])
        if n > 4 : 
            g = join(g,L[4])
    return g
    

def close(L,a1,a2) :       
    l = len(L)    
    g1 = join(L[0],L[1]) 
    if l == 3 :
        g2 = L[2]        
        i = len(L[0]['a']) + 2
        j = len(L[0]['a']) + len(L[1]['a']) + a1
        n = len(g1['a'])
        g1['a'] += g2['a']
        for b in g2['b'] : 
            g1['b'] += [[b[0]+n, b[1]+n, b[2]]]
        g1['b'] += [[i,j,L[2]['c'][-1]]]    
    k = len(g1['a'])-len(L[-1]['a']) + a2
    g1['b'] += [[2,k,L[0]['c'][-1]]]        
    return g1


def export(c,g):         
    a = len(g['a'])
    b = len(g['b'])
    mol2 = 'bond_'+str(c)+'.mol2'
    tf = open(mol2,'w')
    tf.write('@<TRIPOS>MOLECULE\n*****\n')
    tf.write(str(a) + '\t' + str(b) + '  0  0  0\n')
    tf.write('SMALL\n')
    tf.write('molecule\n\n')
    tf.write('@<TRIPOS>ATOM\n')
    n = 1
    x = [0,0,0]
    for a in g['a'] :
        m = str(n)
        x = [x[0]+uniform(-2,2),x[1]+uniform(-2,2),x[2]+uniform(-2,2)]	
        tf.write(m + '\t' + a+m + '\t' + str(x[0])+  '\t' + str(x[1])+ '\t' + str(x[2]) + '\t' + a + '\n') 
        n += 1
    tf.write('@<TRIPOS>BOND\n')
    n = 1
    for b in g['b'] : 
        m = str(n)
        tf.write(m + '\t' +str(b[0]) + '\t' + str(b[1]) + '\t' + str(b[2]) + '\n' )
        n += 1
    tf.close() 
    return c + 1




###############################################################################
###############################################################################
###############################################################################
### loops of generation


c = 1

#=============================================================================
### acyclic
for i in d : 
    for j in d: 
        if j >= i and d[i]['c'][0] == d[j]['c'][0] : 
            g = join(d[i],d[j])
            c = export(c,g) 

print c , ' after acyclic joining' 


#=============================================================================
### halogen
for i in h :
    for j in f :        
        for k in f :
            if h[i]['c'][0] > 2 : 
                for l in f : 
                    if h[i]['c'][0] > 3 : 
                        for m in ['CH3.1', 'H.1', 'N+.1', 'O.1', 'Om.1', 'S.1', 'Sm.1'] : 
                            g = joins([h[i],f[j],f[k],f[l],f[m]])
                            c = export(c,g) 
                    else : 
                        g = joins([h[i],f[j],f[k],f[l]])
                        c = export(c,g)
            else : 
                g = joins([h[i],f[j],f[k]])
                c = export(c,g)

print c , ' after halgen fragments' 

#=============================================================================
### 3-mem
for i in p : 
    for j in ['C.1.1','O.1.1'] :         
        if p[i]['c'][0] == q[j]['c'][0] and p[i]['c'][-1] == q[j]['c'][-1]: 
            g = close([p[i],q[j]],1,1)
            c = export(c,g) 

print c , ' after 3-mem ' 


#=============================================================================
### 4-mem
for i in ['CG3C41.1.1', 'NG2R43.1.1', 'CHHC.1.1', 'C=ON.1.1'] : 
    for j in p :
        if p[i]['c'][0] == p[j]['c'][0] and p[i]['c'][-1] == p[j]['c'][-1]: 
            g = close([p[i],p[j]],2,2)
            c = export(c,g) 

print c , ' after 4-mem ' 


#=============================================================================
### 5-mem
for i in p : 
    for j in p : 
        if j >= i and p[i]['c'][0] == p[j]['c'][0] : 
            for k in ['C.1.1', 'C=C.1.1', 'N.1.1','C.1.2','C.2.1'] :
                if p[i]['c'][-1] == q[k]['c'][0] and p[j]['c'][-1] == q[k]['c'][-1] :  
                    g = close([p[i],p[j],q[k]],1,1)
                    c = export(c,g)
                    
print c , ' after 5-mem '         


#=============================================================================
### 6-mem
L = ['C=CC.1.2', 'CC=C.2.1', 'C=CC=C.1.1', 'CH=C.1.1', 'CC.2.2', 'CO.2.1', 'OC.1.2', 'ON.1.1']
for i in p : 
    for j in p : 
        if j >= i and p[i]['c'][0] == p[j]['c'][0] : 
            for k in L :
                if p[i]['c'][-1] == q[k]['c'][0] and p[j]['c'][-1] == q[k]['c'][-1] :  
                    g = close([p[i],p[j],q[k]],2,1)
                    c = export(c,g)

print c , ' after 6-mem ' 


#=============================================================================
### 7-mem
L3 = ['C7.1.1','C7.1.2','C7.2.1','C7.2.2','C72.1.1','C72.1.2','C72.2.1','C72.2.2','C74.1.1','C74.1.2','C74.2.1','C76.1.1']
for i in p : 
    for j in p : 
        if j >= i and p[i]['c'][0] == p[j]['c'][0] : 
            for k in L3 :
                if p[i]['c'][-1] == q[k]['c'][0] and p[j]['c'][-1] == q[k]['c'][-1] :  
                    g = close([p[i],p[j],q[k]],2,1)
                    c = export(c,g)

print c , ' after 7-mem ' 




###############################################################################
###############################################################################
###############################################################################
### execute the cgenff for many files 

from os import walk ,getcwd , system

count = 1
### getting the mol2 file
mol2 = 0
path = getcwd()
for root , dirs, files in walk(path):
    for f in files :
        if '.mol2' in f :
            print count , '===================  ' , f , '  ===================\n'
            srt = f.replace('mol2','srt')
            system('./cgenff -a ' + f + ' > ' + srt)
            print '\n\n\n'
            count += 1



print '***************************************'
print 'ENDED SUCCESSFULLY'
